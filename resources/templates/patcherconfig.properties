#模块 ${moduleName} (${modulePath}) 导出补丁的配置文件
#导出补丁选项参数 , true 不导出test包。
config-notest=true
#是否导出源码 , true 导出源码。
config-exportsourcefile=true
#是否打包成jar(所有idea项目和模块 才打包，其他非模块和项目名字的不打包)   , true 打包成jar文件。
config-compressjar=true
#打包成jar的是否保留classess里的文件   , true 删除class。 false 不删除classes文件夹结构
config-compressEndDeleteClass=false
#如果打包jar，那么 META-INF.MF 文件模板磁盘全路径
config-ManifestFilePath=
#是否猜测模块，默认true，开启后 如果配置文件没有指明的类会根据包名第三个判断模块
# （比如 nc.ui.pub.ButtonBar 第三个是pub 所以认为模块是 pub）    , true 根据包名称第三个作为模块名。
config-guessModule=false
#关闭使用JAVAP方式判断 源码文件对应,默认false         , true 不启用javap分析class文件对应源文件。
config-closeJavaP=false
# 是否跳过此配置文件所在模块，不导出这个模块       , true 补丁不包含此模块。
config-ignoreModule=false
# 不导出的文件列表 多个 用 英文,隔开
# 第一个 根据class定位精确不导出， 第二个 根据包名和里面的文件名精确定位不导出， 第三个 根据包名路径下的 所有 都不导出
config-ignoreFiles=
# NCC的话，出补丁 client里哪些class的packge文件需要放入hotwebs，如果这个是空 就全部！
nccClientHotwebsPackges=
# 是否不导出 modelue.xml 默认false
not-export-modelue-xml=false






#全类名匹配的输出模块
nc.ui.glpub.UiManager=gl
#非源码的文件输出模块
nc.bs.arap.1.txt=arap
#支持包路径匹配（优先级低于 全类名匹配， 包路径优先匹配最精确的包）
nc.bs.po=pu
nc.bs.po.itf.pub=pub